//=============================================================================
//
// movable_obj.cpp
// Author : koduna hirohito
//
//=============================================================================

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "movable_obj.h"

//*****************************************************************************
// コンストラクタ
//*****************************************************************************
CMovable_Obj::CMovable_Obj()
{
	m_Pos = D3DXVECTOR3(0.0f,0.0f,0.0f);
	m_OldPos = D3DXVECTOR3(0.0f, 0.0f, 0.0f);
	m_Rot = D3DXVECTOR3(0.0f, 0.0f, 0.0f);
	m_OldRot = D3DXVECTOR3(0.0f, 0.0f, 0.0f);
	m_Move = D3DXVECTOR3(0.0f, 0.0f, 0.0f);
}

//*****************************************************************************
// デストラクタ
//*****************************************************************************
CMovable_Obj::~CMovable_Obj()
{
}

//*****************************************************************************
// 初期化
//*****************************************************************************
HRESULT CMovable_Obj::Init()
{
	return S_OK;
}

//*****************************************************************************
// 終了処理
//*****************************************************************************
void CMovable_Obj::Uninit()
{
}

//*****************************************************************************
// 更新処理
//*****************************************************************************
void CMovable_Obj::Update()
{
	m_OldPos = m_Pos;
	m_OldRot = m_Rot;

	m_Pos += m_Move;

	m_Move += (D3DXVECTOR3(0.0f, 0.0f, 0.0f) - m_Move) * 0.1f;

	m_MoveVec = m_Pos - m_OldPos;

	D3DXVec3Normalize(&m_MoveVec,&m_MoveVec);
}

//*****************************************************************************
// 描画処理
//*****************************************************************************
void CMovable_Obj::Draw()
{
}

//*****************************************************************************
//ライフが指定数以下(false)、以上（true）の場合,trueを返す
//*****************************************************************************
bool CMovable_Obj::CheckLife(int nLife, bool b)
{
	if (b)
	{//ライフが指定数,以上（true）の場合
		if (m_nLife >= nLife)
		{
			return true;
		}

		return false;
	}

	if (m_nLife <= nLife)
	{//ライフが指定数,以下(false)の場合
		return true;
	}

	return false;
}
